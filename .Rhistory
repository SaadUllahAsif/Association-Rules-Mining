setwd("C:/Users/Saad Ullah/Desktop/ASDM/Association")
data <-read.csv("cosmetics.csv",header=T, colClasses="factor")
skim(data)
data <-read.csv("Cosmetics.csv",header=T, colClasses="factor")
data <-read.csv("Cosmetics.csv",header=T, colClasses="factor")
library(skimr)
skim(data)
library(arules)
View(data)
View(data)
Yes <- colSums(data == "Yes")
No<- colSums(data == "No")
barplot(All,legend=rownames(All))
All <- rbind(Yes,No)
barplot(All,legend=rownames(All))
barplot(all, beside=T,legend=rownames(all))
barplot(All, beside=T,legend=rownames(all))
rules <- apriori(data)
summary(rules)
rules <- apriori(data)
summary(rules)
inspect(rules)
rules <- apriori(data, parameter =list(minlen=2,maxlen=3, conf = 0.90))
rules <- apriori(data, parameter =list(minlen=2,maxlen=3, conf = 0.90))
summary(data)
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c("cosmetics=uses"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c("cosmetics=Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c("Cosmetics=Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.90),
appearance= list(rhs=c("Cosmetics=Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.90),
appearance= list(rhs=c("Cosmetics=Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.90),
appearance= list(rhs=c("Cosmetics.csv=Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.90),
appearance= list(rhs=c("Cosmetics = Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.90),
appearance= list(rhs=c("data = Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.95),
appearance= list(rhs=c("cosmetics=Yes"),default="lhs"))
rules <- apriori(data, parameter = list(minlen=2, maxlen=3,conf = 0.50),
appearance= list(rhs=c("Cosmetics = Yes"),default="lhs"))
# Finding interesting rules-1
rules <- apriori(mydata,parameter = list(minlen=2, maxlen=3,supp=.01, conf=.7),
appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes"),default="lhs"))
# Finding interesting rules-1
rules <- apriori(data,parameter = list(minlen=2, maxlen=3,supp=.01, conf=.7),
appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes"),default="lhs"))
# Finding interesting rules-1
rules1 <- apriori(data,parameter = list(minlen=2, maxlen=3,supp=.01, conf=.7),
appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes"),default="lhs"))
rules2 <- apriori(mydata,parameter = list(minlen=2, maxlen=5,supp=.1, conf=.5),appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes", "Nail.Polish=Yes", "Brushes=Yes", "Concealer=Yes", "Eyebrow.Pencils=Yes", "Bronzer=Yes",
"Lip.liner=Yes", "Mascara=Yes", "Eye.shadow=Yes","Lip.Gloss=Yes", "Lipstick=Yes", "Eyeliner=Yes"),default="none"))
rules2 <- apriori(data,parameter = list(minlen=2, maxlen=5,supp=.1, conf=.5),appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes", "Nail.Polish=Yes", "Brushes=Yes", "Concealer=Yes", "Eyebrow.Pencils=Yes", "Bronzer=Yes",
"Lip.liner=Yes", "Mascara=Yes", "Eye.shadow=Yes","Lip.Gloss=Yes", "Lipstick=Yes", "Eyeliner=Yes"),default="none"))
quality(rules)<-round(quality(rules),digits=3)
# Finding interesting rules-1
rules <- apriori(data,parameter = list(minlen=2, maxlen=3,supp=.01, conf=.7),
appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes"),default="lhs"))
rules <- apriori(data,parameter = list(minlen=2, maxlen=5,supp=.1, conf=.5),appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes", "Nail.Polish=Yes", "Brushes=Yes", "Concealer=Yes", "Eyebrow.Pencils=Yes", "Bronzer=Yes",
"Lip.liner=Yes", "Mascara=Yes", "Eye.shadow=Yes","Lip.Gloss=Yes", "Lipstick=Yes", "Eyeliner=Yes"),default="none"))
quality(rules)<-round(quality(rules),digits=3)
rules.sorted <- sort(rules, by="lift")
summary(rules)
inspect(rules)
install.packages("arulesViz")
library(arulesViz)
plot(rules)
plot(rules, method="grouped")
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.70),
appearance= list(rhs=c("cosmetics=Yes"),default="lhs"))
rules <- apriori(data,
parameter = list(minlen=2, maxlen=3,conf = 0.70),
appearance= list(rhs=c("Cosmetics=Yes"),default="lhs"))
rules <- apriori(data,parameter = list(minlen=2, maxlen=5,supp=.1, conf=.5),appearance=list(rhs=c("Foundation=Yes"),
lhs=c("Bag=Yes", "Blush=Yes", "Nail.Polish=Yes", "Brushes=Yes", "Concealer=Yes", "Eyebrow.Pencils=Yes", "Bronzer=Yes",
"Lip.liner=Yes", "Mascara=Yes", "Eye.shadow=Yes","Lip.Gloss=Yes", "Lipstick=Yes", "Eyeliner=Yes"),default="none"))
quality(rules)<-round(quality(rules),digits=3)
rules.sorted <- sort(rules, by="lift")
summary(rules)
inspect(rules)
library(arulesViz)
plot(rules)
library(arulesViz)
plot(rules, method="grouped")
# Finding redundancy
redundant <- is.redundant(rules, measure="confidence")
which(redundant)
rules.pruned <- rules[!redundant]
rules.pruned <- sort(rules.pruned, by="lift")
inspect(rules.pruned)
